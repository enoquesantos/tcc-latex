<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" xmlns:UML="http://schema.omg.org/spec/UML/1.4" timestamp="2018-01-18T19:11:57">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.13</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel href="UML.xml" xmi.version="1.4" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model name="Modelo UML" xmi.id="m1" isSpecification="false" isAbstract="false" isRoot="false" isLeaf="false">
   <UML:Namespace.ownedElement>
    <UML:Stereotype namespace="m1" name="folder" xmi.id="folder" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
    <UML:Stereotype namespace="m1" name="constructor" xmi.id="constructor" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
    <UML:Stereotype namespace="m1" name="destructor" xmi.id="destructor" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
    <UML:Stereotype namespace="m1" name="enum" xmi.id="enum" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
    <UML:Model namespace="m1" name="Logical View" xmi.id="Logical_View" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
     <UML:Namespace.ownedElement>
      <UML:Package namespace="Logical_View" name="Datatypes" xmi.id="Datatypes" isSpecification="false" stereotype="folder" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
       <UML:Namespace.ownedElement>
        <UML:DataType namespace="Datatypes" name="char" xmi.id="un3YooG8Uo0NY" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="int" xmi.id="ubqsHfA8S5OPp" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="float" xmi.id="upnSHTFgyTdHu" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="double" xmi.id="uZIPXN9sY9xAe" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="bool" xmi.id="uoGFXhQ384RzO" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="string" xmi.id="uwKuaPWmvbT17" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="unsigned char" xmi.id="uprPCDSK6CtzT" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="signed char" xmi.id="uWxSbaSf24miw" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="unsigned int" xmi.id="ujULlwewAW3kR" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="signed int" xmi.id="unstAJhGrN3rT" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="short int" xmi.id="uv51Tnhz0CjcJ" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="unsigned short int" xmi.id="u6X99kWGq52aR" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="signed short int" xmi.id="u1Y5mxEavbNDY" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="long int" xmi.id="uwp8TxTrSz0Hy" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="signed long int" xmi.id="uo8JKgw3XJ0tT" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="unsigned long int" xmi.id="uU2scIuDPtoYj" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="long double" xmi.id="u8SGZknm5ZEEU" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType namespace="Datatypes" name="wchar_t" xmi.id="uEOvXZzgUkV0H" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="urUgw22aD7Fby" namespace="Datatypes" name="QObject*" xmi.id="uh83XVG1sSS8y" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="uyEOFhqCRapiE" namespace="Datatypes" name="const Database&amp;" xmi.id="uQ1WlkqUXktDL" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="uyEOFhqCRapiE" namespace="Datatypes" name="Database*" xmi.id="ue3JWUNTDvRBU" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="uBRaIe8tLJv15" namespace="Datatypes" name="const QString&amp;" xmi.id="uPKA81OfxPtww" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="umCsjyyhTKcSR" namespace="Datatypes" name="const QVariantMap&amp;" xmi.id="u5tB8TLLu4Pzy" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="u5ryOfQhJ6adC" namespace="Datatypes" name="const QVariant&amp;" xmi.id="uXyr4AGg3tvpQ" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="u5D70GzO7PRnf" namespace="Datatypes" name="const QStringList&amp;" xmi.id="uwzswJq28pZIx" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
        <UML:DataType elementReference="umCsjyyhTKcSR" namespace="Datatypes" name="QVariantMap*" xmi.id="u6K9VdpzYwvz2" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class namespace="Logical_View" name="QByteArray" xmi.id="unTtWzFGfcgFC" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QDir" xmi.id="ugxPOAbPlYae7" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QFile" xmi.id="uEOSpYM5yr0zg" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QSqlError" xmi.id="uyCwsv9v8Jx4Q" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QSqlRecord" xmi.id="usA3g680tmASX" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QStringList" xmi.id="u5D70GzO7PRnf" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QUrl" xmi.id="uQKrzDTBUHxm5" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class comment="@brief The Database class&#xa;This class implements a Singleton pattern and manage database operations&#xa;with high level methods to select, update, insert and remove data into application database.&#xa;Supports only SQLITE and all operations is handle by QSqlDatabase and QSqlQuery with some customizations." namespace="Logical_View" name="Database" xmi.id="uyEOFhqCRapiE" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="uGfZV3ACMadKC"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="@brief m_instance&#xa;keeps the Database instance pointer" type="ue3JWUNTDvRBU" name="m_instance" xmi.id="uAYj8DkGKqZc6" isSpecification="false" ownerScope="classifier" visibility="private"/>
        <UML:Attribute comment="@brief m_databaseFileName&#xa;Keeps the absolute SQLITE .db file path and name.&#xa;This string is buil based on the platform." type="uBRaIe8tLJv15" name="m_databaseFileName" xmi.id="uBLqbccqpJ7us" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_qsqlQuery&#xa;This object handle SQL DML operations executing the queries operations.&#xa;The QSqlQuery class provides a means of executing and manipulating SQL statements.&#xa;QSqlQuery encapsulates the functionality involved in creating, navigating and&#xa;retrieving data from SQL queries which are executed on a QSqlDatabase." type="u7Nt6nrtbgfIA" name="m_qsqlQuery" xmi.id="uTJTOO1pnyjOO" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_qSqlDatabase&#xa;This object handle SQLITE database creation and connections.&#xa;The QSqlDatabase class provides an interface for accessing a database through a connection.&#xa;An instance of QSqlDatabase represents the connection,&#xa;providing access to the database via one of the supported database drivers,&#xa;which are derived from QSqlDriver." type="uvkkRPBU53Hp5" name="m_qSqlDatabase" xmi.id="u3bva3roL30vd" isSpecification="false" visibility="private"/>
        <UML:Operation name="Database" isQuery="false" xmi.id="uPRayy5H7yvAO" isSpecification="false" stereotype="constructor" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uh83XVG1sSS8y" name="parent" xmi.id="uyQPrNLI1X47G" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="Database" isQuery="false" xmi.id="u9SKWR38vA79D" isSpecification="false" stereotype="constructor" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uQ1WlkqUXktDL" name="other" xmi.id="ue8yg4rZ9X2XK" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief operator =&#xa;In singleton object, the operator '=' needs to be private" name="operator =" isQuery="false" xmi.id="uzz5GTbtPGeCc" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uQ1WlkqUXktDL" name="" xmi.id="ugmuDv3904D1W" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="~ Database" isQuery="false" xmi.id="ulO6Si5r11e2K" isSpecification="false" stereotype="destructor" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false"/>
        <UML:Operation comment="@brief openConnection&#xa;Open the first connection with database if is not yet opened.&#xa;This method too be create the &quot;.db&quot; file on the first object query execution." name="openConnection" isQuery="false" xmi.id="uqQPc1hz1YF96" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false"/>
        <UML:Operation comment="@brief setFileName&#xa;Set the absolute sqlite file name using the application writable location&#xa;and the QApplication::ApplicationName() to define and create the .db file." name="setFileName" isQuery="false" xmi.id="uD2ObVNxsjVT8" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false"/>
        <UML:Operation comment="@brief instance&#xa;Return the pointer to this object&#xa;@return Database*" name="instance" isQuery="false" xmi.id="uWzRI7PvWTGxf" isSpecification="false" ownerScope="classifier" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ue3JWUNTDvRBU" xmi.id="uqmSYlRTagthD" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief queryExec&#xa;Execute a generic sqlite query, like &quot;SELECT * FROM application_settings&quot;&#xa;To access the result content of the query, the public method QVariantList resultSet() can be used to interate in result set.&#xa;@param sqlQueryString QString&#xa;@return bool return true if the query was success executed, otherwise false." name="queryExec" isQuery="false" xmi.id="ukMGJYn0gMxlv" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uoGFXhQ384RzO" xmi.id="uPY2VrXHyI77K" kind="return"/>
          <UML:Parameter type="uPKA81OfxPtww" name="sqlQueryString" xmi.id="uG5Wp0a9tZoIp" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="tableColumns" isQuery="false" xmi.id="uoRkzAPCW1C2E" isSpecification="false" stereotype="constructor" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="uk0JbISkcUrRN" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="resultSet" isQuery="false" xmi.id="u4quCuAs1NkJs" isSpecification="false" stereotype="constructor" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uCle3o2xYyFwp" name="selectType" xmi.id="uw4zQqBd8Ea9Y" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="select" isQuery="false" xmi.id="umjUGYng37TVe" isSpecification="false" stereotype="constructor" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="u17JRLLtBzE9Y" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="ucMsOW4JhH6BP" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="args" xmi.id="uzHGIC7HUtu8Y" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="insert" isQuery="false" xmi.id="uSspsxN0N5IDA" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uZ3ohQl9iIewA" kind="return"/>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="ucgYeZXwWxBb0" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="insertData" xmi.id="uB13th8PtB0e8" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="remove" isQuery="false" xmi.id="u6cyR4zPuwBmc" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uKYoIjJBInlWq" kind="return"/>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="upzq3HYQELLOd" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="uOCXiC6aWldIu" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="uPKA81OfxPtww" name="whereComparator" xmi.id="uzrMOLFw4XoF9" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="update" isQuery="false" xmi.id="uGg7UshgnQVht" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uHliQOv5h1328" kind="return"/>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="uUedDFT0cynTM" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="updateData" xmi.id="u9P9JpwVrdP5n" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="uLv7P3DgiM6N0" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="args" xmi.id="uEKT4Kn5V1Zmo" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="lastInsertId" isQuery="false" xmi.id="u5jQqPv7vDCPv" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="u4SknKnVUpItl" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="numRowsAffected" isQuery="false" xmi.id="u0NCzmjlCcDkc" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="udPwKcThkCgcJ" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="lastRowId" isQuery="false" xmi.id="uxbJwj5t23mWR" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="u9TgWxsPBoRfJ" kind="return"/>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="uV4kxuRmP4ptk" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief createTable&#xa;This method ready a &quot;.sql&quot; file pass in filePath parameter.&#xa;Will be create a string query and execute using queryExec(QString&amp;) to create the database table.&#xa;&#xa;@WARNING!&#xa;Any internal database error for the file will be ignored!&#xa;Your needs to prevent any errors from the SQL commands into this file.&#xa;@param filePath QString the path to &quot;.sql&quot; file in operating system." name="createTable" isQuery="false" xmi.id="umcxwhMdHWLqk" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="filePath" xmi.id="uAeJ6BX0aC6Ej" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief lastQuery&#xa;get the last query executed in database. Uses the QSqlQuery::lastQuery().&#xa;@return QString a empty string if the last query is none. Otherwise, return the last string query." name="lastQuery" isQuery="false" xmi.id="uN0hPRKZDC4Lj" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uBRaIe8tLJv15" xmi.id="uM7CHHcYvy4X7" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief lastError&#xa;@return QString a empty string if the last query is success executed. Otherwise, return the last query error message" name="lastError" isQuery="false" xmi.id="u1okMWedSevE6" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uBRaIe8tLJv15" xmi.id="uAgNImLKYCCAk" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief logMessage&#xa;Send operation messages, like errors and success queries&#xa;@param message QString a string with the generic messages" name="logMessage" isQuery="false" xmi.id="u5e7F7O7pyOBw" isSpecification="false" visibility="protected" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="message" xmi.id="uz2kdr32nx2fE" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:Enumeration comment="@brief The SELECT_TYPE enum&#xa;This enumeration is used to decide when create a map from table&#xa;based on meta_key -> meta_value on resultSet method." namespace="uyEOFhqCRapiE" name="SELECT_TYPE" xmi.id="uerMxFMiDqasS" isSpecification="false" stereotype="enum" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
         <UML:Enumeration.literal>
          <UML:EnumerationLiteral namespace="uerMxFMiDqasS" name="All_Itens_Int" xmi.id="u95Rf8K2TWwTR" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
          <UML:EnumerationLiteral namespace="uerMxFMiDqasS" name="Meta_Key_Value_Int" xmi.id="uqD06guL2qE3A" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
         </UML:Enumeration.literal>
        </UML:Enumeration>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class namespace="Logical_View" name="QObject" xmi.id="urUgw22aD7Fby" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Generalization parent="urUgw22aD7Fby" namespace="Logical_View" name="" xmi.id="uGfZV3ACMadKC" isSpecification="false" child="uyEOFhqCRapiE" visibility="public" discriminator=""/>
      <UML:Class namespace="Logical_View" name="QString" xmi.id="uBRaIe8tLJv15" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="enum SELECT_TYPE" xmi.id="uCle3o2xYyFwp" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QVariantMap" xmi.id="umCsjyyhTKcSR" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QSqlQuery" xmi.id="u7Nt6nrtbgfIA" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QSqlDatabase" xmi.id="uvkkRPBU53Hp5" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="AsyncSelect" xmi.id="u19IpKdcLfknH" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class comment="@brief The DatabaseComponent class&#xa;&#xa;This class encapsulate a database operations to application plugins as custom QML type,&#xa;registered in application Context to be used by QML objects.&#xa;Uses the singleton instance of Database class to call the hight level methods: select, insert, update and remove.&#xa;&#xa;@WARNING!&#xa;The sqlite database will be created only if any plugin has a file &quot;plugin_table.sql&quot; (with table creation query)&#xa;in plugin directory. So, the qml object plugin needs to import the &quot;Database&quot; component to&#xa;use the methods and execute queries, saving or load data from your table.&#xa;Example:&#xa;# suposes a file MessagesPage.qml&#xa;&#xa;import QtQuick 2.9&#xa;import Database 1.0&#xa;&#xa;Item {&#xa;id: rootItem&#xa;&#xa;Component.onCompleted: database.select({}) // pass a empty predicated&#xa;&#xa;Database {&#xa;id: database&#xa;jsonColumns: [&quot;sender&quot;] &#xa;onItemLoaded: listViewModel.append(data)&#xa;}&#xa;}&#xa;&#xa;To select uses: select(&quot;plugin_table&quot;, {&quot;id&quot;: 1}). The result wil be sent in itemLoaded signal with a QVariantList of QVariantMap's.&#xa;To insert uses: insert(&quot;plugin_table&quot;, {&quot;name&quot;: &quot;Mouse Logitech MA1x&quot;, &quot;price&quot;: 19,55})&#xa;To update uses: update(&quot;plugin_table&quot;, {&quot;price&quot;: 21,15}, {&quot;name&quot;: &quot;Mouse Logitech MA1x&quot;})&#xa;To remove uses: remove(&quot;plugin_table&quot;, {&quot;name&quot;: &quot;Mouse Logitech MA1x&quot;})" namespace="Logical_View" name="DatabaseComponent" xmi.id="u1Z2t0vGPwk8R" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="uCZlpauuASLAe"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="@brief m_totalItens&#xa;A integer with total itens registered in database for current table.&#xa;It's useful to paginate the entries in database for current table." type="ubqsHfA8S5OPp" name="m_totalItens" xmi.id="uHydPEj5Y6utN" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_savedPks&#xa;A QVariantList with all ID's saved in database for current table.&#xa;It's useful to check if the current table contains a some item and prevent to insert again." type="ugJjHYbkU49Pf" name="m_savedPks" xmi.id="uQMnVHOXEUdIZ" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_pkColumn&#xa;Set a column name when the tables uses a string column as&#xa;primary key. If defined, will be used to retrieve and keept in m_savedPks&#xa;and ca be useful to qml plugins check if some item from webservice is already on database." type="uBRaIe8tLJv15" name="m_pkColumn" xmi.id="uFqSC9A43nLL8" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_database&#xa;A pointer to Database object." type="ue3JWUNTDvRBU" name="m_database" xmi.id="ucMdKAHhWxlZo" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_tableName&#xa;A string with the current table name.&#xa;This component is configured to execute operations in one table.&#xa;To execute in multiple tables, needs to set the table name before call insert, select, remove or update." type="uBRaIe8tLJv15" name="m_tableName" xmi.id="uuRGb3PE8pCTw" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_tableColumns&#xa;A string list with current table columns names and is defined internaly using m_database->tableColumns(m_tableName).&#xa;The columns names is used to parse values for each insert and update data, removing properties that not exists in current table.&#xa;from objects loaded from webservice." type="u5D70GzO7PRnf" name="m_tableColumns" xmi.id="u1M5Tvuuf8eH9" isSpecification="false" visibility="private"/>
        <UML:Attribute comment="@brief m_jsonColumns&#xa;A string list with json columns names, saved as serialized strings.&#xa;m_jsonColumns is used to parse these strings to QVariant(Map/List) before return to QML objects." type="u5D70GzO7PRnf" name="m_jsonColumns" xmi.id="ut5Bkk2oKPAJU" isSpecification="false" visibility="private"/>
        <UML:Operation name="DatabaseComponent" isQuery="false" xmi.id="us4Dh2dSxF3eN" isSpecification="false" stereotype="constructor" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uh83XVG1sSS8y" name="parent" xmi.id="umkxyHMGHHxnr" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="containsId" isQuery="false" xmi.id="uBBokFi3orptF" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uoGFXhQ384RzO" xmi.id="uKOep3HVBtHkU" kind="return"/>
          <UML:Parameter type="uXyr4AGg3tvpQ" name="item" xmi.id="u3zuBSvPnsvcs" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="insert" isQuery="false" xmi.id="uDjFo7D2sd2Oq" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uWk39ZsGmOUdq" kind="return"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="data" xmi.id="uiGrGlbAQyzfw" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="select" isQuery="false" xmi.id="ukEnxfZFCcXGc" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="uXp07b7QH11gd" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="args" xmi.id="uJpeZIcsQBf1P" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="update" isQuery="false" xmi.id="unsacB6bISsSu" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uNgSmQermRycm" kind="return"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="data" xmi.id="uNcWLrcPMtYie" value="" isSpecification="false" visibility="private"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="uzD8mkc97jbC1" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation name="remove" isQuery="false" xmi.id="uYxEr3DkczwOj" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="ubqsHfA8S5OPp" xmi.id="uAXWMuZN7Y1WK" kind="return"/>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="where" xmi.id="uqJ1uC4Ggecoy" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief load&#xa;Load table columns and the total itens saved in database for current plugin" name="load" isQuery="false" xmi.id="uWoRFRooSov66" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false"/>
        <UML:Operation comment="@brief setTablename&#xa;Set in object m_tableName the value for current plugin table name.&#xa;After set the parameter to m_tableName, if is not empty, call load() method.&#xa;@param tableName QString" name="setTableName" isQuery="false" xmi.id="uJP3cakFtYLq0" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="tableName" xmi.id="uOLVTGMquYqek" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief setPkColumn&#xa;Set in object m_pkColumn the value for primary key column when the table uses&#xa;a string as table primary key. It's useful to keep all itens and prevent to insert&#xa;again on the listView or in database.&#xa;@param pkColumn QString" name="setPkColumn" isQuery="false" xmi.id="uoV0K45kUKvj8" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uPKA81OfxPtww" name="pkColumn" xmi.id="uenCqKSdL1i4P" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief setJsonColumns&#xa;Set in object m_jsonColumns the columns&#xa;@param jsonColumns QStringList QML can set as javascript array" name="setJsonColumns" isQuery="false" xmi.id="u6t4CrRBGEb02" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="uwzswJq28pZIx" name="jsonColumns" xmi.id="uNCjrP3Ew0ZDP" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief parseData&#xa;This method parse a object or array to be saved as string serialized in database.&#xa;Basically, iterate in 'm_jsonColumns' parsing json object or array found in &amp;insertData using QJsonDocument.&#xa;Uses QMetaType to check each column value type.&#xa;@param insertData QVariantMap*" name="parseData" isQuery="false" xmi.id="uF6h2DfPoNovl" isSpecification="false" visibility="private" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="u6K9VdpzYwvz2" name="data" xmi.id="ufMhjPSFaxLbh" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="@brief itemLoaded&#xa;This signal will be emitted after load some database data in select method.&#xa;@param data QVariantMap a map with column_name->value loaded from database." name="itemLoaded" isQuery="false" xmi.id="uJQL19gFFkBJA" isSpecification="false" visibility="protected" isAbstract="false" isLeaf="false" isRoot="false" isOverride="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter type="u5tB8TLLu4Pzy" name="entry" xmi.id="u2RseLYkvt05n" value="" isSpecification="false" visibility="private"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization parent="urUgw22aD7Fby" namespace="Logical_View" name="" xmi.id="uCZlpauuASLAe" isSpecification="false" child="u1Z2t0vGPwk8R" visibility="public" discriminator=""/>
      <UML:Class namespace="Logical_View" name="QVariant" xmi.id="u5ryOfQhJ6adC" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="QVariantList" xmi.id="ugJjHYbkU49Pf" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
      <UML:Class namespace="Logical_View" name="Class.Database" xmi.id="uQ5FwwdaAZgJz" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false"/>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams resolution="96">
       <diagram backgroundcolor="#ffffff" griddotcolor="#d3d3d3" showatts="1" localid="-1" showgrid="0" canvaswidth="837" showstereotype="1" type="1" isopen="1" showattsig="1" snapcsgrid="0" canvasheight="1013.05" linewidth="0" showpackage="1" showscope="1" snapy="25" name="diagrama de classe" snapgrid="0" documentation="" textcolor="#000000" showopsig="1" snapx="25" showattribassocs="1" xmi.id="uymhVI2rysmeN" showpubliconly="0" font="Noto Sans,10,-1,0,50,0,0,0,0,0,Regular" showops="1" zoom="135" linecolor="#000000" usefillcolor="0" fillcolor="#ffffff">
        <widgets>
         <classwidget usesdiagramfillcolor="0" showoperations="1" localid="uTPm7NALgj3pH" showstereotype="1" showopsigs="601" y="28.4122" linewidth="0" height="360" showpackage="1" showscope="1" x="-1403.29" autoresize="1" width="445" usesdiagramusefillcolor="0" isinstance="0" textcolor="#000000" xmi.id="u1Z2t0vGPwk8R" showpubliconly="0" font="Noto Sans,10,-1,0,50,0,0,0,0,0,Regular" showattributes="1" showattsigs="601" linecolor="#000000" usefillcolor="0" fillcolor="#ffffff"/>
        </widgets>
        <messages/>
        <associations/>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model namespace="m1" name="Use Case View" xmi.id="Use_Case_View" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model namespace="m1" name="Component View" xmi.id="Component_View" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
     <UML:Namespace.ownedElement>
      <UML:Package namespace="Component_View" name="home/enoque/qt/projects/tcc/src/database" xmi.id="uuphsWIh4VwX3" isSpecification="false" stereotype="folder" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
       <UML:Namespace.ownedElement>
        <UML:Artifact namespace="uuphsWIh4VwX3" name="database.h" xmi.id="ujijzFiqKnPNz" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" drawas="1"/>
        <UML:Artifact namespace="uuphsWIh4VwX3" name="databasecomponent.h" xmi.id="uACCd3iwzu4vj" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false" drawas="1"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
     </UML:Namespace.ownedElement>
    </UML:Model>
    <UML:Model namespace="m1" name="Deployment View" xmi.id="Deployment_View" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model namespace="m1" name="Entity Relationship Model" xmi.id="Entity_Relationship_Model" isSpecification="false" visibility="public" isAbstract="false" isLeaf="false" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings uniqueid="ulHE8xUUFLdqr" documentation="" viewid="uymhVI2rysmeN"/>
  <listview>
   <listitem type="800" id="Views" open="1">
    <listitem type="836" id="Entity_Relationship_Model" open="1"/>
    <listitem type="802" id="Use_Case_View" open="1"/>
    <listitem type="827" id="Deployment_View" open="1"/>
    <listitem type="821" id="Component_View" open="1">
     <listitem type="820" id="uuphsWIh4VwX3" open="0">
      <listitem type="824" id="ujijzFiqKnPNz" open="0"/>
      <listitem type="824" id="uACCd3iwzu4vj" open="0"/>
     </listitem>
    </listitem>
    <listitem type="801" id="Logical_View" open="1">
     <listitem type="813" id="u19IpKdcLfknH" open="0"/>
     <listitem type="813" id="uQ5FwwdaAZgJz" open="1"/>
     <listitem type="813" id="uyEOFhqCRapiE" open="0">
      <listitem type="815" id="ulO6Si5r11e2K" open="0"/>
      <listitem type="815" id="umcxwhMdHWLqk" open="0"/>
      <listitem type="815" id="u9SKWR38vA79D" open="0"/>
      <listitem type="815" id="uPRayy5H7yvAO" open="0"/>
      <listitem type="815" id="uSspsxN0N5IDA" open="0"/>
      <listitem type="815" id="uWzRI7PvWTGxf" open="0"/>
      <listitem type="815" id="u1okMWedSevE6" open="0"/>
      <listitem type="815" id="u5jQqPv7vDCPv" open="0"/>
      <listitem type="815" id="uN0hPRKZDC4Lj" open="0"/>
      <listitem type="815" id="uxbJwj5t23mWR" open="0"/>
      <listitem type="815" id="u5e7F7O7pyOBw" open="0"/>
      <listitem type="814" id="uBLqbccqpJ7us" open="0"/>
      <listitem type="814" id="uAYj8DkGKqZc6" open="0"/>
      <listitem type="814" id="u3bva3roL30vd" open="0"/>
      <listitem type="814" id="uTJTOO1pnyjOO" open="0"/>
      <listitem type="815" id="u0NCzmjlCcDkc" open="0"/>
      <listitem type="815" id="uqQPc1hz1YF96" open="0"/>
      <listitem type="815" id="uzz5GTbtPGeCc" open="0"/>
      <listitem type="815" id="ukMGJYn0gMxlv" open="0"/>
      <listitem type="815" id="u6cyR4zPuwBmc" open="0"/>
      <listitem type="815" id="u4quCuAs1NkJs" open="0"/>
      <listitem type="831" id="uerMxFMiDqasS" open="0">
       <listitem type="839" id="u95Rf8K2TWwTR" open="0"/>
       <listitem type="839" id="uqD06guL2qE3A" open="0"/>
      </listitem>
      <listitem type="815" id="umjUGYng37TVe" open="0"/>
      <listitem type="815" id="uD2ObVNxsjVT8" open="0"/>
      <listitem type="815" id="uoRkzAPCW1C2E" open="0"/>
      <listitem type="815" id="uGg7UshgnQVht" open="0"/>
     </listitem>
     <listitem type="813" id="u1Z2t0vGPwk8R" open="0">
      <listitem type="815" id="uBBokFi3orptF" open="0"/>
      <listitem type="815" id="us4Dh2dSxF3eN" open="0"/>
      <listitem type="815" id="uDjFo7D2sd2Oq" open="0"/>
      <listitem type="815" id="uJQL19gFFkBJA" open="0"/>
      <listitem type="815" id="uWoRFRooSov66" open="0"/>
      <listitem type="814" id="ucMdKAHhWxlZo" open="0"/>
      <listitem type="814" id="ut5Bkk2oKPAJU" open="0"/>
      <listitem type="814" id="uFqSC9A43nLL8" open="0"/>
      <listitem type="814" id="uQMnVHOXEUdIZ" open="0"/>
      <listitem type="814" id="u1M5Tvuuf8eH9" open="0"/>
      <listitem type="814" id="uuRGb3PE8pCTw" open="0"/>
      <listitem type="814" id="uHydPEj5Y6utN" open="0"/>
      <listitem type="815" id="uF6h2DfPoNovl" open="0"/>
      <listitem type="815" id="uYxEr3DkczwOj" open="0"/>
      <listitem type="815" id="ukEnxfZFCcXGc" open="0"/>
      <listitem type="815" id="u6t4CrRBGEb02" open="0"/>
      <listitem type="815" id="uoV0K45kUKvj8" open="0"/>
      <listitem type="815" id="uJP3cakFtYLq0" open="0"/>
      <listitem type="815" id="unsacB6bISsSu" open="0"/>
     </listitem>
     <listitem type="807" id="uymhVI2rysmeN" open="0" label="diagrama de classe"/>
     <listitem type="813" id="uCle3o2xYyFwp" open="0"/>
     <listitem type="813" id="unTtWzFGfcgFC" open="0"/>
     <listitem type="813" id="ugxPOAbPlYae7" open="0"/>
     <listitem type="813" id="uEOSpYM5yr0zg" open="0"/>
     <listitem type="813" id="urUgw22aD7Fby" open="0"/>
     <listitem type="813" id="uvkkRPBU53Hp5" open="0"/>
     <listitem type="813" id="uyCwsv9v8Jx4Q" open="0"/>
     <listitem type="813" id="u7Nt6nrtbgfIA" open="0"/>
     <listitem type="813" id="usA3g680tmASX" open="0"/>
     <listitem type="813" id="uBRaIe8tLJv15" open="0"/>
     <listitem type="813" id="u5D70GzO7PRnf" open="0"/>
     <listitem type="813" id="uQKrzDTBUHxm5" open="0"/>
     <listitem type="813" id="u5ryOfQhJ6adC" open="0"/>
     <listitem type="813" id="ugJjHYbkU49Pf" open="0"/>
     <listitem type="813" id="umCsjyyhTKcSR" open="0"/>
     <listitem type="830" id="Datatypes" open="0">
      <listitem type="829" id="uoGFXhQ384RzO" open="1"/>
      <listitem type="829" id="un3YooG8Uo0NY" open="1"/>
      <listitem type="829" id="uQ1WlkqUXktDL" open="0"/>
      <listitem type="829" id="uPKA81OfxPtww" open="0"/>
      <listitem type="829" id="uwzswJq28pZIx" open="0"/>
      <listitem type="829" id="uXyr4AGg3tvpQ" open="0"/>
      <listitem type="829" id="u5tB8TLLu4Pzy" open="0"/>
      <listitem type="829" id="ue3JWUNTDvRBU" open="0"/>
      <listitem type="829" id="uZIPXN9sY9xAe" open="1"/>
      <listitem type="829" id="upnSHTFgyTdHu" open="1"/>
      <listitem type="829" id="ubqsHfA8S5OPp" open="1"/>
      <listitem type="829" id="u8SGZknm5ZEEU" open="1"/>
      <listitem type="829" id="uwp8TxTrSz0Hy" open="1"/>
      <listitem type="829" id="uh83XVG1sSS8y" open="0"/>
      <listitem type="829" id="u6K9VdpzYwvz2" open="0"/>
      <listitem type="829" id="uv51Tnhz0CjcJ" open="1"/>
      <listitem type="829" id="uWxSbaSf24miw" open="1"/>
      <listitem type="829" id="unstAJhGrN3rT" open="1"/>
      <listitem type="829" id="uo8JKgw3XJ0tT" open="1"/>
      <listitem type="829" id="u1Y5mxEavbNDY" open="1"/>
      <listitem type="829" id="uwKuaPWmvbT17" open="1"/>
      <listitem type="829" id="uprPCDSK6CtzT" open="1"/>
      <listitem type="829" id="ujULlwewAW3kR" open="1"/>
      <listitem type="829" id="uU2scIuDPtoYj" open="1"/>
      <listitem type="829" id="u6X99kWGq52aR" open="1"/>
      <listitem type="829" id="uEOvXZzgUkV0H" open="1"/>
     </listitem>
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++"/>
  </codegeneration>
 </XMI.extensions>
</XMI>
